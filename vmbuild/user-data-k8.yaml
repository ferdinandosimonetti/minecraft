#cloud-config

groups:
  - docker

users:
  - default
  - name: ubuntu
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDCZEriDm4fDkMFXfeefHDjd52Wv4SBikOvu5PG46fEWC+34jvhxaR0fZsHXoiCSENieGALPj19RpZ01fVpE2uGMSKIVmhyzLJSxtfzD0zd5V85kVHYUJgIHOdnyhLmVxySueeUzPcR0DNC4Ev7yuvIhza7Ot857K22GGNA658RnT1m9DCjwWPaJZ5P6QrZjFIGG71YWhmcr7zETM3Hu7CePgBE6lSzrj1AyemuGZDWJpPKM0V/dB9EM+xEoumvS/NJkSFveNTwDLSkPBjlq7BXlaiJx4MCX+cDt+mCZlm6t3e7Bsb5x2H/0P4rmhtf8M9qdsm1LUIlrFvBAWfRB+ud ferdi@DESKTOP-HFA54P3
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCpxUnP8vCro31Xt2EcSKc/qB+0S/32UudZOUbyySZveVStUD6TJ4+ZaqYFsdCYLjGHXyo7jyUuwgKMrtP14dHr71easmnhyxeDqNunN2nQMSoph2emspP6lZrH6w+XmWTsau7tSSh8y78Jeq0ebrt0gzGWGBQITxT3MsZ8WR+f1tYrkASNJyYckrbSB3vK34w+LTbsjSa52CVkXCAzbFf6oR/or9luVU9pdj/TnX+OXsMgcSpYeH8o5rAlyBhOFIio5wNXXYZlaBcKOs29xB4oWXjlKRwlz592TIYBIjHHJkXf3kJfZmy+y94aHCs/Ih9QROzR0VFGmxeTPRM+Kf1GbnB8+HyqRWNVpsnvZlPqikfIVU9dyGm1CcpPgwX+/BYs661PMfAZjqgR50Pte1nR+nq0TCQFHp/06px92fXuBVUO6/nl1lPCZqMGcT1jb7OTXk3NpqYnphaUNWhhRrSk7xmi/muYm+jzgZtabptXM2741fLo8QSLodSPrgy2CPE= ferdi@LAPTOP-S6G27617
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: sudo, docker
    shell: /bin/bash

apt:
  sources:
    kubernetes:
      source: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
      keyserver: "hkp://keyserver.ubuntu.com:80"
      keyid: BA07F4FB
    docker:
      arches: amd64
      source: "deb https://download.docker.com/linux/ubuntu bionic stable"
      keyserver: "hkp://keyserver.ubuntu.com:80"
      keyid: 0EBFCD88

package_upgrade: true
packages:
  - jq
  - kubelet
  - kubectl
  - kubeadm
  - docker-ce

write_files:
  - content: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }
    path: /etc/docker/daemon.json
  - content: |
        apiVersion: kubeadm.k8s.io/v1beta2
        kind: InitConfiguration
        bootstrapTokens:
              - groups:
                - system:bootstrappers:kubeadm:default-node-token
                token: y7yaev.9dvwxx6ny4ef8vlq
                ttl: 0s
                usages:
                - signing
                - authentication
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: "vsphere"
            cloud-config: "/etc/kubernetes/vsphere.conf"
        ---
        apiVersion: kubeadm.k8s.io/v1beta2
        kind: ClusterConfiguration
        kubernetesVersion: v1.18.2
        apiServer:
          extraArgs:
            cloud-provider: "vsphere"
            cloud-config: "/etc/kubernetes/vsphere.conf"
          extraVolumes:
          - name: cloud
            hostPath: "/etc/kubernetes/vsphere.conf"
            mountPath: "/etc/kubernetes/vsphere.conf"
        controllerManager:
          extraArgs:
            cloud-provider: "vsphere"
            cloud-config: "/etc/kubernetes/vsphere.conf"
          extraVolumes:
          - name: cloud
            hostPath: "/etc/kubernetes/vsphere.conf"
            mountPath: "/etc/kubernetes/vsphere.conf"
        networking:
          podSubnet: "10.244.0.0/16"
    path: /etc/kubernetes/kubeadminitmaster.yaml
  - content: |
        apiVersion: kubeadm.k8s.io/v1beta2
        discovery:
          file:
            kubeConfigPath: discovery.yaml
          timeout: 5m0s
          tlsBootstrapToken: y7yaev.9dvwxx6ny4ef8vlq
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: vsphere
    path: /etc/kubernetes/kubeadminitworker.yaml
  - content: |
           [Global]
            user = "administrator@vsphere.local"
            password = "Savignone.2015"
            port = "443"
            insecure-flag = "1"

            [VirtualCenter "192.168.0.111"]
            datacenters = "DC0"

            [Workspace]
            server = "192.168.0.111"
            datacenter = "DC0"
            default-datastore = "datastore1"
            resourcepool-path = "CL0/Resources"
            folder = "k8s"

            [Disk]
            scsicontrollertype = pvscsi

            [Network]
            public-network = "VM Network"
    path: /etc/kubernetes/vsphere.conf

runcmd:
  - swapoff --all
  - sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab
  - mkdir -p /etc/systemd/system/docker.service.d
  - systemctl daemon-reload
  - systemctl restart docker
  - sysctl net.bridge.bridge-nf-call-iptables=1
  - sysctl net.bridge.bridge-nf-call-ip6tables=1
  - 'echo "disable_vmware_customization: false" >> /etc/cloud/cloud.cfg'
  - sed -i 's/D \/tmp 1777 root root -/#D \/tmp 1777 root root -/g' /usr/lib/tmpfiles.d/tmp.conf
  - echo -n > /etc/machine-id

final_message: "The system is prepped, after $UPTIME seconds"
#power_state:
#  timeout: 30
#  mode: poweroff